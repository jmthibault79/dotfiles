# git branch/tag source: Oliver Davies
# http://oliverdavies.co.uk/blog/2013/04/display-git-branch-or-tag-names-your-bash-prompt

parse_git_branch () {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

parse_git_tag () {
  git describe --tags 2> /dev/null
}

parse_git_branch_or_tag() {
  local OUT="$(parse_git_branch)"
  if [ "$OUT" == " ((no branch))" ]; then
    OUT="($(parse_git_tag))";
  fi
  echo $OUT
}

# bug: was not wrapping correctly.
# Be sure to escape color sequences so bash doesn't count them in line lengths.
# http://mywiki.wooledge.org/BashFAQ/053
# http://askubuntu.com/a/24422

ps1_reset=$(tput sgr0)   
ps1_boldyellow=$(tput setaf 3)$(tput bold)
ps1_boldwhite=$(tput setaf 7)$(tput bold) 

ps1_username='\u'
ps1_hostname='\h'
ps1_workingdir='\w'

ps1_a="$ps1_username@$ps1_hostname"
ps1_b="\[$ps1_boldwhite\]$ps1_workingdir\[$ps1_reset\]"
ps1_c="\[$ps1_boldyellow\]\$(parse_git_branch_or_tag)\[$ps1_reset\]"

PS1="$ps1_a $ps1_b $ps1_c \\$ "
